name: Staging Deployment
on:
  push:
    branches:
      - master
jobs:

  build:
    name: Build and Publish
    runs-on: ubuntu-latest
    steps:

      - name: Check out code into the working directory
        uses: actions/checkout@master

      - name: Set up MySQL database
        run: mysql -uroot -proot -e 'CREATE DATABASE IF NOT EXISTS test_okpock;'

      - name: Run migrations
        run: mysql -uroot -proot test_okpock < ./migrations/up.sql

      - name: Set up Go 1.12
        uses: actions/setup-go@v1
        with:
          version: 1.12
        id: go

      - name: Get dependencies
        env:
          GOPROXY: https://proxy.golang.org
          GO111MODULE: on
        run: make download

      - name: Copy root certificate
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_S3_BUCKET: ${{ secrets.TEST_CERTIFICATES_BUCKET }}
        uses: actions/aws/cli@master
        with:
          args: s3 cp s3://${AWS_S3_BUCKET}/wwdr.pem ${GITHUB_WORKSPACE}/wwdr.pem

      - name: Copy coupon certificate
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_S3_BUCKET: ${{ secrets.TEST_CERTIFICATES_BUCKET }}
        uses: actions/aws/cli@master
        with:
          args: s3 cp s3://${AWS_S3_BUCKET}/coupon-dev.p12 ${GITHUB_WORKSPACE}/coupon-dev.p12

      - name: Run tests
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          MAILER_REGION: ${{ secrets.MAILER_REGION }}
          TEST_DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
          TEST_SERVER_SECRET: ${{ secrets.TEST_SERVER_SECRET }}
          TEST_RECIPIENT: ${{ secrets.TEST_RECIPIENT }}
          TEST_FILE: ${{ secrets.TEST_FILE }}
          TEST_FILE_IN_FOLDER: ${{ secrets.TEST_FILE_IN_FOLDER }}
          TEST_PASSES_BUCKET: ${{ secrets.TEST_PASSES_BUCKET }}
          TEST_PROJECT: ${{ secrets.TEST_PROJECT }}
          TEST_TEMPLATES_BUCKET: ${{ secrets.TEST_TEMPLATES_BUCKET }}
          TEST_CERTIFICATES_ROOT_CERT: ${GITHUB_WORKSPACE}/wwdr.pem
          TEST_CERTIFICATES_COUPON_PATH: ${GITHUB_WORKSPACE}/coupon-dev.p12
          TEST_CERTIFICATES_COUPON_PASS: ${{ secrets.TEST_CERTIFICATES_COUPON_PASS }}
        run: make test

      - name: Build
        run: make release

      - name: Packing zip
        run: |
          zip -r ${GITHUB_SHA} . -x '.git/*'
          mkdir -p build
          mv ${GITHUB_SHA}.zip build/${GITHUB_SHA}.zip

      - name: Publish source bundle
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        uses: actions/aws/cli@master
        with:
          args: s3 cp build/${GITHUB_SHA}.zip s3://${AWS_S3_BUCKET}/api-dev.okpock.com/

      - name: Create application version
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_APPLICATION_ENV: ${{ secrets.AWS_STAGING_APPLICATION_ENV }}
          AWS_APPLICATION_NAME: ${{ secrets.AWS_STAGING_APPLICATION_NAME }}
        uses: actions/aws/cli@master
        with:
          args: >
            elasticbeanstalk create-application-version \
              --application-name ${AWS_APPLICATION_NAME} \
              --version-label ${GITHUB_SHA} \
              --source-bundle \
              S3Bucket="${AWS_S3_BUCKET}",S3Key="api-dev.okpock.com/${GITHUB_SHA}.zip"
      
      - name: Update application environment
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
          AWS_APPLICATION_ENV: ${{ secrets.AWS_STAGING_APPLICATION_ENV }}
          AWS_APPLICATION_NAME: ${{ secrets.AWS_STAGING_APPLICATION_NAME }}
        uses: actions/aws/cli@master
        with:
          args: >
            elasticbeanstalk update-environment \
              --application-name ${AWS_APPLICATION_NAME} \
              --environment-name ${AWS_APPLICATION_ENV} \
              --version-label ${GITHUB_SHA}
